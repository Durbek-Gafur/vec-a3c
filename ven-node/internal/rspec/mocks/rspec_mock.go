// Code generated by MockGen. DO NOT EDIT.
// Source: vec-node/internal/rspec (interfaces: Rspec)

// Package rspec_mock is a generated GoMock package.
package rspec_mock

import (
	reflect "reflect"
	rspec "vec-node/internal/rspec"

	gomock "github.com/golang/mock/gomock"
)

// MockRspec is a mock of Rspec interface.
type MockRspec struct {
	ctrl     *gomock.Controller
	recorder *MockRspecMockRecorder
}

// MockRspecMockRecorder is the mock recorder for MockRspec.
type MockRspecMockRecorder struct {
	mock *MockRspec
}

// NewMockRspec creates a new mock instance.
func NewMockRspec(ctrl *gomock.Controller) *MockRspec {
	mock := &MockRspec{ctrl: ctrl}
	mock.recorder = &MockRspecMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRspec) EXPECT() *MockRspecMockRecorder {
	return m.recorder
}

// GetRspec mocks base method.
func (m *MockRspec) GetRspec() (*rspec.Resources, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRspec")
	ret0, _ := ret[0].(*rspec.Resources)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRspec indicates an expected call of GetRspec.
func (mr *MockRspecMockRecorder) GetRspec() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRspec", reflect.TypeOf((*MockRspec)(nil).GetRspec))
}
